<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="main">

    <!-- hotplace_no로 감정분석결과평균 불러오기 -->
   <!-- <select id="emoAnalAvg" resultType="double" parameterType="int">
        <![CDATA[
        select avg(emoreview.emo_result)
        from emoreview
        where hotplace_no=#{hotplace_no}
		]]>
    </select>-->

    <!--오늘 전국 베스트 찜(음식점)-->
    <select id="allBestEatJjim" resultType="com.yumpro.ddogo.main.dto.BestJjimDTO">
        <![CDATA[
        with ReviewAverages as (
        select hotplace_no, avg(emo_result) as avg_emo_result
        from emoreview
        group by hotplace_no
        )
        select h.hotplace_name, h.hotplace_no, count(m.map_no) as jjim,
               format(ra.avg_emo_result,2) as avg_emo_result,h.address
        from hotplace h
        left join mymap m on h.hotplace_no = m.hotplace_no
        left join ReviewAverages ra on h.hotplace_no = ra.hotplace_no
        where datediff(m.recom_date, now()) = 0
          and m.recom = 'Y'
          and h.hotplace_cate_no = 1
        group by h.hotplace_name, h.hotplace_no, ra.avg_emo_result
        order by jjim desc,ra.avg_emo_result desc
        limit 5
		]]>
    </select>

    <!--오늘 전국 베스트 찜(카페)-->
    <select id="allBestCafeJjim" resultType="com.yumpro.ddogo.main.dto.BestJjimDTO">
        <![CDATA[
        with ReviewAverages as (
        select hotplace_no, avg(emo_result) as avg_emo_result
        from emoreview
        group by hotplace_no
        )
        select h.hotplace_name, h.hotplace_no, count(m.map_no) as jjim,
               format(ra.avg_emo_result,2) as avg_emo_result,h.address
        from hotplace h
        left join mymap m on h.hotplace_no = m.hotplace_no
        left join ReviewAverages ra on h.hotplace_no = ra.hotplace_no
        where datediff(m.recom_date, now()) = 0
          and m.recom = 'Y'
          and h.hotplace_cate_no = 2
        group by h.hotplace_name, h.hotplace_no, ra.avg_emo_result
        order by jjim desc,ra.avg_emo_result desc
        limit 5
		]]>
    </select>

    <!--sido가져오기-->
    <select id="sido" resultType="String">
        <![CDATA[
		select distinct sido
        from hotplace
		]]>
    </select>

    <!--sido값으로 gugun가져오기-->
    <select id="gugunList" resultType="String" parameterType="String">
        <![CDATA[
		select distinct gugun
        from hotplace
        where sido=#{sido}
		]]>
    </select>

    <!--월별베스트-->
    <select id="monthBest" resultType="hashmap" parameterType="hashmap">
        <![CDATA[
		with ReviewAverages as (
        select hotplace_no, avg(emo_result) as avg_emo_result
        from emoreview
        group by hotplace_no
        )
        select h.hotplace_name, h.hotplace_no, count(m.map_no) as jjim,
               format(ra.avg_emo_result,2) as avg_emo_result, h.address
        from hotplace h
        left join mymap m on h.hotplace_no = m.hotplace_no
        left join ReviewAverages ra on h.hotplace_no = ra.hotplace_no
        where year(m.recom_date) = year(now()) and month(m.recom_date) = month(now())
          and m.recom = 'Y'
          and h.hotplace_cate_no =#{hotplace_cate_no}
          and h.sido=#{sido}
          and h.gugun=#{gugun}
        group by h.hotplace_name, h.hotplace_no, ra.avg_emo_result
        order by jjim desc, ra.avg_emo_result desc
        limit 5
		]]>
    </select>

    <!--hotplace_no로 리뷰 가져오기-->
    <select id="getReview" resultType="hashmap" parameterType="int">
        <![CDATA[
		select review,emo_result
        from ddogo.emoreview
        where hotplace_no=#{hotplace_no}
		]]>
    </select>


</mapper>